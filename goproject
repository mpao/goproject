#!/bin/bash
if [ "$1" == "" ]; then
    echo "specifica il nome del modulo"
	exit 1
fi

mkdir $1 && cd $1
go mod init $1

git config --global init.defaultBranch main
git init > /dev/null

cat <<EOT > .git/hooks/pre-commit
#!/bin/bash
# installa golangci https://golangci-lint.run/
golangci-lint cache clean && golangci-lint run ./...
EOT
chmod +x .git/hooks/pre-commit

touch .gitignore
cat <<EOT > .gitignore
bin/
EOT
touch README.md

cp /home/marco/Projects/golangci.yaml .golangci.yaml

cat <<EOT > Taskfile.yaml
version: "3"

silent: true

env:
  name: projectName
  version: v0.0
  branch:
    sh: "git rev-parse --abbrev-ref HEAD"
  buildversion:
    sh: "if ! git rev-parse --short {{.branch}} > /dev/null 2>&1; then echo 'noversion'; else git rev-parse --short {{.branch}}; fi"
tasks:
  default:
    desc: "Mostra questo messaggio"
    cmds:
      - task --list-all
  sec:
    desc: "Esegue il controllo di sicurezza del codice"
    cmds:
      - govulncheck ./...
  test:
    desc: "Esegue i test del servizio"
    cmds:
      - go test -count=1 ./... -v -cover -race
  lint:
    desc: "Esegue il linting del codice"
    cmds:
      - golangci-lint cache clean && golangci-lint run ./...
  linux:
    desc: "Compila l'applicazione per Linux"
    cmds:
      # multiline command vedi https://github.com/go-task/task/issues/274#issuecomment-565876913
      - |
        GOOS=linux go build \
        -ldflags="-s -w -X main.appVersion={{.version}} -X main.appName={{.name}}" \
        -o bin/{{.name}}-build.{{.buildversion}} ./cmd
  windows:
    desc: "Compila l'applicazione per Windows"
    cmds:
      - |
        GOOS=windows go build \
        -ldflags="-s -w -X main.appVersion={{.version}} -X main.appName={{.name}}" \
        -o bin/{{.name}}-build.{{.buildversion}}.exe ./cmd
  macos:
    desc: "Compila l'applicazione per MacOS"
    cmds:
      - |
        GOOS=darwin GOARCH=arm64 go build \
        -ldflags="-s -w -X main.appVersion={{.version}} -X main.appName={{.name}}" \
        -o bin/{{.name}}-build.{{.buildversion}}-arm64 ./cmd
  release:
    desc: "Compila l'applicazione multi-platform"
    cmds:
      - task: sec
      - task: test
      - task: windows
      - task: linux
      - task: macos
  build:
    desc: "Compila l'applicazione per il sistema corrente"
    cmds:
      - go mod tidy
      - |
        go build \
        -ldflags="-s -w -X main.appVersion={{.version}} -X main.appName={{.name}}" \
        -o bin/{{.name}}.exe ./cmd
      - echo "Fatto! Applicazione salvata nella subdirectory bin/"
EOT
